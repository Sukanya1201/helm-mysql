#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: {{ include "db-helm.fullname" . }}
#  labels:
#    {{- include "db-helm.labels" . | nindent 4 }}
#spec:
#  {{- if not .Values.autoscaling.enabled }}
#  replicas: {{ .Values.replicaCount }}
#  {{- end }}
#  selector:
#    matchLabels:
#      {{- include "db-helm.selectorLabels" . | nindent 6 }}
#  template:
#    metadata:
#      {{- with .Values.podAnnotations }}
#      annotations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      labels:
#        {{- include "db-helm.selectorLabels" . | nindent 8 }}
#    spec:
#      {{- with .Values.imagePullSecrets }}
#      imagePullSecrets:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      serviceAccountName: {{ include "db-helm.serviceAccountName" . }}
#      securityContext:
#        {{- toYaml .Values.podSecurityContext | nindent 8 }}
#      containers:
#        - name: {{ .Chart.Name }}
#          securityContext:
#            {{- toYaml .Values.securityContext | nindent 12 }}
#          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
#          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          ports:
#            - name: http
#              containerPort: {{ .Values.service.port }}
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#          resources:
#            {{- toYaml .Values.resources | nindent 12 }}
#      {{- with .Values.nodeSelector }}
#      nodeSelector:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.affinity }}
#      affinity:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.tolerations }}
#      tolerations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}

# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
        - image: mysql:5.7 # image from docker-hub
          args:
            - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  password

            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  dbName


          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: mysql-pv-claim